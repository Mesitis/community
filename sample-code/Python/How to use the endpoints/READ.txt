Hello! 

Here are a few guidelines of how to call the endpoints to do extend our API.  The sample code files demonstrate the guidelines, but we will explain them here.

Firstly, the login and/or the 2fa (two factor authentication) needs to be done in order to call any of the endpoints, as it provides certain parameters/headers that need to be passed through to the API. 

Some endpoints require 2fa whereas some do not. These can be determined using the Postman Collections - https://bento.postman.co/docs/collection/view/884147-bc9cdd34-a8aa-61de-a040-824670448465#0510e8b4-11a7-d746-5b99-a6bee7dec604 [In every request where the “switch_user_id” is a required header, the 2fa code should be included].

Next, in order to call the endpoint, the request-url must be defined - it is used in the imported ’requests’ python module when calling the endpoint. the following three URLs should also be defined:

'''
get_token_url = "https://api.canopy.cloud:443/api/v1/sessions/"		
validate_otp_url = "https://api.canopy.cloud:443/api/v1/sessions/otp/validate.json" #calling the production server for OTP authentication
get_partner_users_url = "https://api.canopy.cloud:443/api/v1/admin/users.json"

'''

Headings need to be defined as well, as then need to be sent when the request is being made (in dictionary form). Common Headings include : authorization, username, x-app-switch-user etc. The headings for a given request can be found in code form in the postman link. The headings must always match the form in the postman generated code.

Querystring is a dictionary generated by postman to provide the request with it's params. This is also passed in dictionary form, found in code-form in the postman link, and must match the postman params aswell.

Payload is another dictionary generated by postman, in all POST requests. It provides the requests with the 'data' that all POST requests require, however unlike Querystring and Headings, this is not generated by the Postman - and needs to be typed up manually. The format is identical to that of the Querystring (It's just a dictionary). The feilds for the Payload can be found on the request's section on Postman, and will be displayed as "BODY" under "HEADERS". 

Finally, when all is in order the endpoint can be called through the requests module. In the sample code, this is usually done by creating a "response" object.

From here onwards, the request has been called. However in order to obtain the data from the request, the json object needs to be put in dictionary form. This can be done through the following line:
 " data = json.loads(json.dumps(response.json())) "

It is essential to remember that the returned dictionary is often quite complex and must be navigated accurately. In addition to this, the dictionary attributes may sometimes be mistaken by python as unicode - which may require some simple conversion back to string.

Best Regards

- The Canopy Team